# # Завдання 2: Клієнт та Сервер
# #
# # 2.1. Опишіть різницю між клієнтом і сервером у контексті веб-розробки.
# #
# # 2.2. Поясніть, як клієнт та сервер взаємодіють за допомогою HTTP-запитів та відповідей.
#
# 2.1. Різниця між клієнтом і сервером у контексті веб-розробки
# У контексті веб-розробки:
#
# Клієнт: Це програма або пристрій, що надсилає запити до сервера, щоб отримати або надати дані. Зазвичай, клієнтом виступає веб-браузер (наприклад, Chrome, Firefox), мобільний додаток або інша програма, яка виконує запити до сервера для отримання ресурсів, таких як HTML-сторінки, зображення, CSS або дані у форматі JSON.
#
# Сервер: Це комп'ютер або програма, що обробляє запити клієнтів і повертає відповідні дані чи виконує дії. Сервери обслуговують запити клієнтів, зберігають дані, виконують бізнес-логіку і забезпечують доступ до баз даних. Прикладом є веб-сервери (Apache, Nginx) або серверні додатки (написані на Python, Node.js, Java тощо).
#
# Основна різниця:
#
# Клієнт ініціює запити.
# Сервер відповідає на ці запити.
# 2.2. Взаємодія клієнта та сервера за допомогою HTTP-запитів та відповідей
# HTTP (Hypertext Transfer Protocol) є протоколом, який регулює обмін даними між клієнтом і сервером у мережі Інтернет. Цей процес включає такі етапи:
#
# Клієнт надсилає запит:
# Клієнт (наприклад, браузер) формує HTTP-запит і надсилає його до сервера. Запит складається з:
#
# Методу HTTP: визначає дію, яку потрібно виконати (наприклад, GET, POST, PUT, DELETE).
# URL-адреси: вказує, до якого ресурсу звертається клієнт.
# Заголовків: містять метаінформацію (тип контенту, авторизацію тощо).
# Тіла запиту (опціонально): містить дані, які клієнт хоче передати серверу (наприклад, форму з даними).
# Сервер обробляє запит:
# Сервер приймає запит, аналізує його і виконує відповідну дію, наприклад:
#
# Шукає запитуваний ресурс.
# Звертається до бази даних.
# Виконує бізнес-логіку.
# Сервер надсилає відповідь:
# Після обробки запиту сервер формує HTTP-відповідь, яка складається з:
#
# Коду статусу: вказує результат запиту (наприклад, 200 OK, 404 Not Found, 500 Internal Server Error).
# Заголовків: містять метаінформацію про відповідь (тип контенту, час кешування тощо).
# Тіла відповіді (опціонально): містить дані, які сервер повертає (наприклад, HTML-код, JSON-об'єкт або файл).
# Клієнт отримує відповідь:
# Клієнт отримує HTTP-відповідь і обробляє її. Наприклад, веб-браузер може відобразити сторінку, а мобільний додаток — оновити інтерфейс на основі отриманих даних.
#
# Приклад:
# Клієнт надсилає GET-запит:
#
# vbnet
# Copy
# Edit
# GET /home HTTP/1.1
# Host: www.example.com
# Сервер відповідає:
#
# php-template
# Copy
# Edit
# HTTP/1.1 200 OK
# Content-Type: text/html
#
# <html>
# <body>
# <h1>Welcome to Example</h1>
# </body>
# </html>
# Такий обмін даними забезпечує функціонування веб-додатків.